from scapy.all import *

# Modbus Header Fields
TID = 310 # random.randrange(1,2000)  # Trransaction ID
PID = 0 # Protocol ID always "zero"
Unit_ID = 1 # ID of the remote terminal unit
len = 8 # Length
Bit_Count = 5
Byte_Count = 1
MBFunction = 15 # Modbus Function "Read Input Registers"
Data = 11

#IP Header Fields
src_ip='192.168.1.5' # Change it to the Source IP - OpenPLC
dst_ip='192.168.2.254' # Change it to the Dest IP - Kali

#TCP Header Fields
tcp_sport = 502
tcp_dport = random.randrange(2000,40000)
tcp_seq = random.randrange(1,2000)
tcp_ack = random.randrange(1,2000)
tcp_flags = 'PA'
tcp_window = 33600 # random.randrange(500,1000)

class ModbusTCP(Packet):
	name='Modbus/TCP'
	fields_desc = [
		ShortField("Transaction_Identifier", TID),
		ShortField("Protocol_Identifier", PID),
		ShortField("Length", len),
		ByteField("Unit_Identifier", Unit_ID)
		]

class Modbus(Packet):
	name='Modbus'
	fields_desc = [
		XByteField("Function_Code", MBFunction),
		ShortField("Reference_Number", 0),
		ShortField("Bit_Count", Bit_Count),
		ByteField("Byte_Count", Byte_Count),
		ByteField("Data", Data)
		]


pkt = IP(src=src_ip, dst=dst_ip)/\
	TCP(sport=tcp_sport, dport=tcp_dport, seq=tcp_seq, ack=tcp_ack, \
		flags=tcp_flags, window=tcp_window)/\
	ModbusTCP()/Modbus()

send(pkt, verbose=0, iface='eth0')
